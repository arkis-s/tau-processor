// translates 8 bit opcode into appropriate index for microcode
// i.e. if opcode = 0F, then maybe index = FEFE in opcode
// line number (excluding comments) == opcode and line content == index
0000 // 00h nop
0002 // 01h hlt
0000 // 02h load
0000 // 03h store
0000 // 04h loadv
0000 // 05h storev
0000 // 06h mov reg1, reg2
0000 // 07h cmp reg1, reg2
0000 // 08h test reg1, reg2
0000 // 09h shl reg1, reg2
0000 // 0Ah shr reg1, reg2
0000 // 0Bh add reg1, reg2
0000 // 0Ch adc reg1, reg2
0000 // 0Dh sub reg1, reg2
0000 // 0Eh sbb reg1, reg2
0000 // 0Fh mul reg1, reg2
0000 // 10h and reg1, reg2
0000 // 11h or reg1, reg2
0000 // 12h xor reg1, reg2
0000 // 13h not reg1
0000 // 14h jmp
0000 // 15h je
0000 // 16h jne
0000 // 17h jc
0000 // 18h jnc
0000 // 19h js
0000 // 1Ah jns
0000 // 1Bh jo
0000 // 1Ch jno
0000 // 1Dh ja 
0000 // 1Eh jae
0000 // 1Fh jb
0000 // 20h jbe
0000 // 21h jg
0000 // 22h jge
0000 // 23h jl
0000 // 24h jle
0000 // 25h undef
0000 // 26h undef
0000 // 27h undef
0004 // 28h mov a, imm8
0004 // 29h mov b, imm8
0004 // 2Ah mov c, imm8
0004 // 2Bh mov d, imm8
0004 // 2Ch mov e, imm8
0004 // 2Dh mov f, imm8
0004 // 2Eh mov g, imm8
0004 // 2Fh mov h, imm8