// translates 8 bit opcode into appropriate index for microcode
// i.e. if opcode = 0F, then maybe index = FEFE in microcode
// line number (excluding comments) == opcode and line content == index
0000 // 00h nop
0001 // 01h hlt
0029 // 02h load
0000 // 03h store
0000 // 04h loadv
0000 // 05h storev
0002 // 06h mov reg1, reg2
0004 // 07h cmp reg1, reg2
0006 // 08h test reg1, reg2
0008 // 09h shl reg1, reg2
000A // 0Ah shr reg1, reg2
000C // 0Bh add reg1, reg2
000E // 0Ch adc reg1, reg2
0010 // 0Dh sub reg1, reg2
0012 // 0Eh sbb reg1, reg2
0014 // 0Fh mul reg1, reg2
0016 // 10h and reg1, reg2
0018 // 11h or reg1, reg2
001A // 12h xor reg1, reg2
001C // 13h not reg1
001E // 14h jmp
001E // 15h je
001E // 16h jne
001E // 17h jc
001E // 18h jnc
001E // 19h js
001E // 1Ah jns
001E // 1Bh jo
001E // 1Ch jno
001E // 1Dh ja 
001E // 1Eh jae
001E // 1Fh jb
001E // 20h jbe
001E // 21h jg
001E // 22h jge
001E // 23h jl
001E // 24h jle
0000 // 25h undef
0000 // 26h undef
0000 // 27h undef
0021 // 28h mov a, imm8
0021 // 29h mov b, imm8
0021 // 2Ah mov c, imm8
0021 // 2Bh mov d, imm8
0021 // 2Ch mov e, imm8
0021 // 2Dh mov f, imm8
0021 // 2Eh mov g, imm8
0021 // 2Fh mov h, imm8
0023 // 30h cmp a, imm8
0023 // 31h cmp b, imm8
0023 // 32h cmp c, imm8
0023 // 33h cmp d, imm8
0023 // 34h cmp e, imm8
0023 // 35h cmp f, imm8
0023 // 36h cmp g, imm8
0023 // 37h cmp h, imm8
0025 // 38h test a, imm8
0025 // 39h test b, imm8
0025 // 3Ah test c, imm8
0025 // 3Bh test d, imm8
0025 // 3Ch test e, imm8
0025 // 3Dh test f, imm8
0025 // 3Eh test g, imm8
0025 // 3Fh test h, imm8
0027 // 40h shl a, imm8
0027 // 41h shl b, imm8
0027 // 42h shl c, imm8
0027 // 43h shl d, imm8
0027 // 44h shl e, imm8
0027 // 45h shl f, imm8
0027 // 46h shl g, imm8
0027 // 47h shl h, imm8
